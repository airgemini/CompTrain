@page "/account/changepassword"
@layout AuthLayout
@inject HttpClient Http
@using CompTrain.Shared.Models.Account;
@inject NavigationManager navManager


    <h2 class="text-center">Change password</h2>
    <EditForm Model="model" OnValidSubmit="Change">

        <div class="form-group">
            <label for="email">Email</label>
            <InputText @bind-Value="model.Email" id="email" class="form-control form-control-sm" type="email" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText @bind-Value="model.Password" id="password" class="form-control form-control-sm" type="password" />
        </div>

        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <InputText @bind-Value="model.ConfirmPassword" id="confirmPassword" class="form-control form-control-sm" type="password" />
        </div>
        <hr />
        <DataAnnotationsValidator />
        <ValidationSummary />
        <Alert Title="Attenzione" ErrorList="changePasswordResponse?.Errors" />
        <button type="submit" class="btn btn-warning btn-block mr-2">CHANGE PASSWORD</button>

    </EditForm>

@code {
    ChangePasswordRequest model = new ChangePasswordRequest();
    ChangePasswordResponse changePasswordResponse = null;

    protected override void OnAfterRender(bool firstRender)
    {

        var uri = navManager.ToAbsoluteUri(navManager.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var code))
        {
            model.Code = code.First();
        }
    }

    public async Task Change()
    {

        var response = await Http.PostAsJsonAsync<ChangePasswordRequest>("api/accounts/changepassword", model);
        changePasswordResponse = await response.Content.ReadFromJsonAsync<ChangePasswordResponse>();
        if (changePasswordResponse.IsSuccess)
        {
            navManager.NavigateTo("/account/login");
        }
    }
}
